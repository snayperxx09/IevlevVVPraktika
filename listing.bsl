Процедура Печать(ТабДок, Ссылка) Экспорт                                     // печать справочника Материалы
	//{{_КОНСТРУКТОР_ПЕЧАТИ(Печать)
	Макет = Справочники.Материалы.ПолучитьМакет("Печать");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Материалы.Ед_изм,
	|	Материалы.Наименование
	|ИЗ
	|	Справочник.Материалы КАК Материалы
	|ГДЕ
	|	Материалы.Ссылка В (&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ТабДок.Вывести(ОбластьЗаголовок);

		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());

		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	//}}
КонецПроцедуры



Процедура Печать(ТабДок, Ссылка) Экспорт           // печать документа Заказ материала
	//{{_КОНСТРУКТОР_ПЕЧАТИ(Печать)
	Макет = Документы.ЗаказМатериала.ПолучитьМакет("Печать");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказМатериала.Дата,
	|	ЗаказМатериала.Номер,
	|	ЗаказМатериала.Поставщик,
	|	ЗаказМатериала.ФИОЗаказчика,
	|	ЗаказМатериала.Материалы.(
	|		НомерСтроки,
	|		Материалы,
	|		Количество
	|	)
	|ИЗ
	|	Документ.ЗаказМатериала КАК ЗаказМатериала
	|ГДЕ
	|	ЗаказМатериала.Ссылка В (&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьМатериалыШапка = Макет.ПолучитьОбласть("МатериалыШапка");
	ОбластьМатериалы = Макет.ПолучитьОбласть("Материалы");
	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ТабДок.Вывести(ОбластьЗаголовок);

		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());

		ТабДок.Вывести(ОбластьМатериалыШапка);
		ВыборкаМатериалы = Выборка.Материалы.Выбрать();
		Пока ВыборкаМатериалы.Следующий() Цикл
			ОбластьМатериалы.Параметры.Заполнить(ВыборкаМатериалы);
			ТабДок.Вывести(ОбластьМатериалы, ВыборкаМатериалы.Уровень());
		КонецЦикла;

		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	//}}
КонецПроцедуры



Процедура Печать(ТабДок, Ссылка) Экспорт            //печать документа Приходная накладная
	//{{_КОНСТРУКТОР_ПЕЧАТИ(Печать)
	Макет = Документы.ПриходнаяНакладная.ПолучитьМакет("Печать");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПриходнаяНакладная.Дата,
	|	ПриходнаяНакладная.Номер,
	|	ПриходнаяНакладная.Поставщик,
	|	ПриходнаяНакладная.Склад,
	|	ПриходнаяНакладная.Материалы.(
	|		НомерСтроки,
	|		Материал,
	|		Количество,
	|		Цена,
	|		Сумма
	|	)
	|ИЗ
	|	Документ.ПриходнаяНакладная КАК ПриходнаяНакладная
	|ГДЕ
	|	ПриходнаяНакладная.Ссылка В (&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьМатериалыШапка = Макет.ПолучитьОбласть("МатериалыШапка");
	ОбластьМатериалы = Макет.ПолучитьОбласть("Материалы");
	ОбластьИтог=Макет.ПолучитьОбласть("Всего");
	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ТабДок.Вывести(ОбластьЗаголовок);

		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());

		ТабДок.Вывести(ОбластьМатериалыШапка);
		ВыборкаМатериалы = Выборка.Материалы.Выбрать();
		СуммаИтог=0;
		Пока ВыборкаМатериалы.Следующий() Цикл
			ОбластьМатериалы.Параметры.Заполнить(ВыборкаМатериалы);
			ТабДок.Вывести(ОбластьМатериалы, ВыборкаМатериалы.Уровень());
			СуммаИтог=СуммаИтог+ВыборкаМатериалы.Сумма;
		КонецЦикла;
		ОбластьИтог.Параметры.ВсегоПоДокументу=СуммаИтог;
		ТабДок.Вывести(ОбластьИтог);

		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	//}}
КонецПроцедуры



Процедура Печать(ТабДок, Ссылка) Экспорт              //печать документа Требование накладная
	//{{_КОНСТРУКТОР_ПЕЧАТИ(Печать)
	Макет = Документы.ТребованиеНакладная.ПолучитьМакет("Печать");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТребованиеНакладная.Дата,
	|	ТребованиеНакладная.Затребовал,
	|	ТребованиеНакладная.Номер,
	|	ТребованиеНакладная.Отпустил,
	|	ТребованиеНакладная.Склад,
	|	ТребованиеНакладная.Цех,
	|	ТребованиеНакладная.Материалы.(
	|		НомерСтроки,
	|		Материалы,
	|		Количество
	|	)
	|ИЗ
	|	Документ.ТребованиеНакладная КАК ТребованиеНакладная
	|ГДЕ
	|	ТребованиеНакладная.Ссылка В (&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьМатериалыШапка = Макет.ПолучитьОбласть("МатериалыШапка");
	ОбластьМатериалы = Макет.ПолучитьОбласть("Материалы");
	Подвал = Макет.ПолучитьОбласть("Подвал");

	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ТабДок.Вывести(ОбластьЗаголовок);

		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());

		ТабДок.Вывести(ОбластьМатериалыШапка);
		ВыборкаМатериалы = Выборка.Материалы.Выбрать();
		Пока ВыборкаМатериалы.Следующий() Цикл
			ОбластьМатериалы.Параметры.Заполнить(ВыборкаМатериалы);
			ТабДок.Вывести(ОбластьМатериалы, ВыборкаМатериалы.Уровень());
		КонецЦикла;

		Подвал.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Подвал);

		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;
	//}}
КонецПроцедуры



Процедура ОбработкаПроведения(Отказ, Режим)           //движение по регистру Приход
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Движения.ОстаткиМатериалов.Записывать = Истина;
	Для Каждого ТекСтрокаМатериалы Из Материалы Цикл
		// регистр ОстаткиМатериалов Приход
		Движение = Движения.ОстаткиМатериалов.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Материал = ТекСтрокаМатериалы.Материал;
		Движение.Склад = Склад;
		Движение.Количество = ТекСтрокаМатериалы.Количество;
	КонецЦикла;
	Движения.Поступления.Записывать = Истина;
	Для Каждого ТекСтрокаМатериалы Из Материалы Цикл
		// регистр Поступления 
		Движение = Движения.Поступления.Добавить();
		Движение.Период = Дата;
		Движение.Материалы = ТекСтрокаМатериалы.Материал;
		Движение.Поставщик = Поставщик;
		Движение.Сотрудник = Сотрудник;
		Движение.Количество = ТекСтрокаМатериалы.Количество;
		Движение.Цена = ТекСтрокаМатериалы.Цена;
		Движение.Сумма = ТекСтрокаМатериалы.Цена*ТекСтрокаМатериалы.Количество;
	КонецЦикла;
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры


Процедура ОбработкаПроведения(Отказ, Режим)        //движение по регистру Расход
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Движения.ОстаткиМатериалов.Записывать = Истина;
	Для Каждого ТекСтрокаМатериалы Из Материалы Цикл
		// регистр ОстаткиМатериалов Расход
		Движение = Движения.ОстаткиМатериалов.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Материал = ТекСтрокаМатериалы.Материалы;
		Движение.Склад = Склад;
		Движение.Количество = ТекСтрокаМатериалы.Количество;
	КонецЦикла;
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры


ВЫБРАТЬ                                                      //запрос на формирование отчета по остаткам материалов
	ОстаткиМатериаловОстаткиИОбороты.Склад,
	ОстаткиМатериаловОстаткиИОбороты.Материал,
	ОстаткиМатериаловОстаткиИОбороты.КоличествоНачальныйОстаток,
	ОстаткиМатериаловОстаткиИОбороты.КоличествоПриход,
	ОстаткиМатериаловОстаткиИОбороты.КоличествоРасход,
	ОстаткиМатериаловОстаткиИОбороты.КоличествоКонечныйОстаток
ИЗ
	РегистрНакопления.ОстаткиМатериалов.ОстаткиИОбороты КАК ОстаткиМатериаловОстаткиИОбороты
